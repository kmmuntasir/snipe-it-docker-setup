services:
  snipeit_mysql:
    container_name: ${MYSQL_HOST}
    volumes:
      - mysql_data:/var/lib/mysql
    image: mysql:8.1.0
    ports:
      - "3306:3306"
    environment:
      - TZ=${TIMEZONE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    env_file:
      - .env.example
    networks:
      - snipeit_network
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "--silent"]
      interval: 5s
      retries: 3
  snipeit:
    depends_on:
      - snipeit_mysql
    image: snipe/snipe-it:v6.1.2
    container_name: snipeit
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - snipeit_data:/var/lib/snipeit
    ports:
      - "${SNIPE_IT_PORT}:80"
    networks:
      - snipeit_network
    env_file:
      - .env.example
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888"]
      interval: 30s
      timeout: 10s
      retries: 3
  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin:5.2.1
    ports:
      - "8080:80"
    environment:
      PMA_HOST: ${MYSQL_HOST}
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      PMA_ARBITRARY: 1
      UPLOAD_LIMIT: 512M
    networks:
      - snipeit_network
    depends_on:
      - snipeit_mysql
    env_file:
      - .env.example
    restart: always

networks:
  snipeit_network:
    driver: bridge

volumes:
  snipeit_data:
  mysql_data: